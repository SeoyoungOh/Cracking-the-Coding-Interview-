package _2_LinkedList;

import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Scanner;

import javax.swing.text.html.HTMLDocument.Iterator;

/*
 * 2.1. unsorted linked list에서 중복 문자 제거
 * - 연관 문제 > 임시버퍼 허용되지 않는 상황에서 해결 */

public class _1_Deduplicate {
	public static void deleteDupsWithBuffer(LinkedList<String> n){
		Hashtable table = new Hashtable();
		
		for(int i=0; i<n.size(); i++){
			if(table.containsKey(n.get(i))){
				System.out.println(n.get(i));
				n.remove(i);
			} else {
				System.out.println(n.get(i));
				table.put(n.get(i), true);
			}
		}
	}
	
	public static void deleteDupsWithoutBuffer(LinkedList<String> n){
		
	}

	public static void main(String[] args) {
		String[] test = new String[5];
		Scanner scan = new Scanner(System.in);
		
		for(int i = 0; i<5; i++){
			System.out.println("Please enter the string : ");
			test[i] = scan.next();
		}
		LinkedList testList = new LinkedList();
		
		System.out.println("List Contents : ");
		
		for(String s : test){
			testList.add(s);
			System.out.println(s+" ");
		}
		System.out.println("");
		
		deleteDupsWithBuffer(testList);
		
		System.out.println("After delete duplicate : ");
		
		for(String s : test){
			testList.add(s);
			System.out.println(s+" ");
		}
		System.out.println("");
		

	}

}
